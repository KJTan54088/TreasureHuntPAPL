
import 'package:flutter/material.dart';
import 'package:collection/collection.dart';
import 'game_screen_4.dart'; 
import 'game_screen_2.dart';

class GameScreen3 extends StatefulWidget {
  final bool chestWasOpened;
  final bool hasHint;
  const GameScreen3({Key? key, required this.chestWasOpened, required this.hasHint}) : super(key: key);
  @override
  _GameScreen3State createState() => _GameScreen3State();
}

class _GameScreen3State extends State<GameScreen3> {
  bool _isHovering = false;
  bool _isHoveringBack = false;
  final List<String> correctSequence = ['left', 'left', 'left', 'right', 'left'];
  List<String> userSequence = [];
  final listEquals = const ListEquality().equals;

  String currentImage = 'assets/image/chest/chest-front.png';
  bool chestOpened = false;
  bool showChest = true;
  bool showIntroText = true;

  @override
  void initState() {
    super.initState();
    chestOpened = widget.chestWasOpened;
    if (chestOpened) {
      showChest = false;
      showIntroText = false;
    }
}


  void rotate(String direction) {
    setState(() {
      currentImage = 'assets/image/chest/chest-$direction.png';
    });

    userSequence.add(direction);
    if (userSequence.length > correctSequence.length) {
      userSequence.removeAt(0); // Keep last 4 inputs
    }

    Future.delayed(Duration(seconds: 1), () {
      setState(() {
        currentImage = 'assets/image/chest/chest-front.png';
      });

      if (listEquals(userSequence, correctSequence)) {
        setState(() {
          chestOpened = true;
          //showChest = false;
          showIntroText = false;
        });
      }
    });
  }

  void dismissIntroText() {
    setState(() {
      showIntroText = false;
    });
  }

  @override
@override
Widget build(BuildContext context) {
  return Scaffold(
    body: GestureDetector(
      onTap: dismissIntroText,
      child: Stack(
        children: [
          // Background
          Positioned.fill(
            child: Image.asset(
              'assets/image/game_screen-straight.jpg',
              fit: BoxFit.cover,
            ),
          ),

          // Chest image or arrow button (after chest is opened)
          if (showChest && !chestOpened)
            Positioned(
              bottom: 100,
              left: MediaQuery.of(context).size.width / 2 - 100, 
              child: Image.asset(
                currentImage,
                width: 200,
                height: 200,
              ),
            ),

          // Arrow button (only when chest is opened)
          if (showChest && chestOpened)
            Positioned(
              bottom: 150,
              left: MediaQuery.of(context).size.width / 2 - 40, 
              child: MouseRegion(
                cursor: SystemMouseCursors.click,
                onEnter: (_) => setState(() => _isHovering = true),
                onExit: (_) => setState(() => _isHovering = false),
                child: ElevatedButton(
                  onPressed: () {
                    Navigator.of(context).pushReplacement(
                      PageRouteBuilder(
                        transitionDuration: Duration(milliseconds: 800),
                        pageBuilder: (_, __, ___) => GameScreen4(chestWasOpened: true,hasHint: widget.hasHint),
                        transitionsBuilder: (_, animation, __, child) =>
                            FadeTransition(opacity: animation, child: child),
                      ),
                    );
                  },
                  style: ElevatedButton.styleFrom(
                    shape: CircleBorder(),
                    padding: EdgeInsets.all(16),
                    backgroundColor: _isHovering ? Colors.white : Colors.white70,
                    shadowColor: Colors.black,
                    elevation: 6,
                  ),
                  child: Icon(
                    Icons.arrow_upward,
                    size: 40,
                    color: Colors.black,
                  ),
                ),
              ),
            ),

          // Rotate buttons
          if (!chestOpened && !showIntroText) ...[
            Positioned(
              bottom: 150,
              left: MediaQuery.of(context).size.width / 2 - 140,
              child: ElevatedButton(
                onPressed: () => rotate('left'),
                child: Icon(Icons.rotate_left),
              ),
            ),
            Positioned(
              bottom: 150,
              left: MediaQuery.of(context).size.width / 2 + 70,
              child: ElevatedButton(
                onPressed: () => rotate('right'),
                child: Icon(Icons.rotate_right),
              ),
            ),
          ],
          // Turn Back Button (always visible)
          Positioned(
            bottom: 70,
            left: MediaQuery.of(context).size.width / 2 - 40,
            child: MouseRegion(
              cursor: SystemMouseCursors.click,
              onEnter: (_) => setState(() => _isHoveringBack = true),
              onExit: (_) => setState(() => _isHoveringBack = false),
              child: ElevatedButton(
                onPressed: () {
                  Navigator.of(context).pushReplacement(
                    PageRouteBuilder(
                      transitionDuration: Duration(milliseconds: 800),
                      pageBuilder: (_, __, ___) => GameScreen2(chestWasOpened: chestOpened, hasHint:widget.hasHint),
                      transitionsBuilder: (_, animation, __, child) =>
                          FadeTransition(opacity: animation, child: child),
                    ),
                  );
                },
                style: ElevatedButton.styleFrom(
                  shape: CircleBorder(),
                  padding: EdgeInsets.all(16),
                  backgroundColor: _isHoveringBack ? Colors.white : Colors.white70,
                  shadowColor: Colors.black,
                  elevation: 6,
                ),
                child: Icon(
                  Icons.reply,
                  size: 36,
                  color: Colors.black,
                ),
              ),
            ),
          ),

          // Textbox (screen1 style)
          Align(
            alignment: Alignment.bottomCenter,
            child: Container(
              margin: EdgeInsets.all(16),
              padding: EdgeInsets.symmetric(horizontal: 24, vertical: 12),
              decoration: BoxDecoration(
                color: Colors.black.withAlpha(102),
                borderRadius: BorderRadius.circular(12),
              ),
              child: Text(
                chestOpened
                  ? "You have obtained a key"
                  : "Looks like a chest, reading from the bottom of the map, it says beginning of army march..I wonder what that means",
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 18,
                  fontStyle: FontStyle.italic,
                ),
                textAlign: TextAlign.center,
              ),
            ),
          ),
        ],
      ),
    ),
  );
}
}